[
  {
    "domain": "homeassistant",
    "services": {
      "check_config": {
        "description": "Check the Home Assistant configuration files for errors. Errors will be displayed in the Home Assistant log.",
        "fields": {}
      },
      "reload_core_config": {
        "description": "Reload the core configuration.",
        "fields": {}
      },
      "restart": {
        "description": "Restart the Home Assistant service.",
        "fields": {}
      },
      "stop": {
        "description": "Stop the Home Assistant service.",
        "fields": {}
      },
      "toggle": {
        "description": "Generic service to toggle devices on/off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to toggle on/off.",
            "example": "light.living_room"
          }
        }
      },
      "turn_off": {
        "description": "Generic service to turn devices off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to turn off.",
            "example": "light.living_room"
          }
        }
      },
      "turn_on": {
        "description": "Generic service to turn devices on under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to turn on.",
            "example": "light.living_room"
          }
        }
      },
      "update_entity": {
        "description": "Force one or more entities to update its data",
        "fields": {
          "entity_id": {
            "description": "One or multiple entity_ids to update. Can be a list.",
            "example": "light.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "persistent_notification",
    "services": {
      "create": {
        "description": "Show a notification in the frontend.",
        "fields": {
          "message": {
            "description": "Message body of the notification. [Templates accepted]",
            "example": "Please check your configuration.yaml."
          },
          "notification_id": {
            "description": "Target ID of the notification, will replace a notification with the same Id. [Optional]",
            "example": 1234
          },
          "title": {
            "description": "Optional title for your notification. [Optional, Templates accepted]",
            "example": "Test notification"
          }
        }
      },
      "dismiss": {
        "description": "Remove a notification from the frontend.",
        "fields": {
          "notification_id": {
            "description": "Target ID of the notification, which should be removed. [Required]",
            "example": 1234
          }
        }
      },
      "mark_read": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "recorder",
    "services": {
      "purge": {
        "description": "Start purge task - delete events and states older than x days, according to keep_days service data.",
        "fields": {
          "keep_days": {
            "description": "Number of history days to keep in database after purge. Value >= 0.",
            "example": 2
          },
          "repack": {
            "description": "Attempt to save disk space by rewriting the entire database file.",
            "example": true
          }
        }
      }
    }
  },
  {
    "domain": "system_log",
    "services": {
      "clear": {
        "description": "",
        "fields": {}
      },
      "write": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "timer",
    "services": {
      "cancel": {
        "description": "Cancel a timer.",
        "fields": {
          "entity_id": {
            "description": "Entity id of the timer to cancel. [optional]",
            "example": "timer.timer0"
          }
        }
      },
      "finish": {
        "description": "Finish a timer.",
        "fields": {
          "entity_id": {
            "description": "Entity id of the timer to finish. [optional]",
            "example": "timer.timer0"
          }
        }
      },
      "pause": {
        "description": "Pause a timer.",
        "fields": {
          "entity_id": {
            "description": "Entity id of the timer to pause. [optional]",
            "example": "timer.timer0"
          }
        }
      },
      "start": {
        "description": "Start a timer.",
        "fields": {
          "duration": {
            "description": "Duration the timer requires to finish. [optional]",
            "example": "00:01:00 or 60"
          },
          "entity_id": {
            "description": "Entity id of the timer to start. [optional]",
            "example": "timer.timer0"
          }
        }
      }
    }
  },
  {
    "domain": "shell_command",
    "services": {
      "lovelace_gen": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "ffmpeg",
    "services": {
      "restart": {
        "description": "Send a restart command to a ffmpeg based sensor.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will restart. Platform dependent.",
            "example": "binary_sensor.ffmpeg_noise"
          }
        }
      },
      "start": {
        "description": "Send a start command to a ffmpeg based sensor.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will start. Platform dependent.",
            "example": "binary_sensor.ffmpeg_noise"
          }
        }
      },
      "stop": {
        "description": "Send a stop command to a ffmpeg based sensor.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will stop. Platform dependent.",
            "example": "binary_sensor.ffmpeg_noise"
          }
        }
      }
    }
  },
  {
    "domain": "input_boolean",
    "services": {
      "toggle": {
        "description": "Toggles an input boolean.",
        "fields": {
          "entity_id": {
            "description": "Entity id of the input boolean to toggle.",
            "example": "input_boolean.notify_alerts"
          }
        }
      },
      "turn_off": {
        "description": "Turns off an input boolean",
        "fields": {
          "entity_id": {
            "description": "Entity id of the input boolean to turn off.",
            "example": "input_boolean.notify_alerts"
          }
        }
      },
      "turn_on": {
        "description": "Turns on an input boolean.",
        "fields": {
          "entity_id": {
            "description": "Entity id of the input boolean to turn on.",
            "example": "input_boolean.notify_alerts"
          }
        }
      }
    }
  },
  {
    "domain": "logbook",
    "services": {
      "log": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "conversation",
    "services": {
      "process": {
        "description": "Launch a conversation from a transcribed text.",
        "fields": {
          "text": {
            "description": "Transcribed text",
            "example": "Turn all lights on"
          }
        }
      }
    }
  },
  {
    "domain": "media_player",
    "services": {
      "clear_playlist": {
        "description": "Send the media player the command to clear players playlist.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to change source on.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "media_next_track": {
        "description": "Send the media player the command for next track.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to send next track command to.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_pause": {
        "description": "Send the media player the command for pause.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to pause on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_play": {
        "description": "Send the media player the command for play.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to play on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_play_pause": {
        "description": "Toggle media player play/pause state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle play/pause state on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_previous_track": {
        "description": "Send the media player the command for previous track.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to send previous track command to.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "media_seek": {
        "description": "Send the media player the command to seek in current playing media.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to seek media on.",
            "example": "media_player.living_room_chromecast"
          },
          "seek_position": {
            "description": "Position to seek to. The format is platform dependent.",
            "example": 100
          }
        }
      },
      "media_stop": {
        "description": "Send the media player the stop command.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to stop on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "play_media": {
        "description": "Send the media player the command for playing media.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to seek media on",
            "example": "media_player.living_room_chromecast"
          },
          "media_content_id": {
            "description": "The ID of the content to play. Platform dependent.",
            "example": "https://home-assistant.io/images/cast/splash.png"
          },
          "media_content_type": {
            "description": "The type of the content to play. Must be one of music, tvshow, video, episode, channel or playlist",
            "example": "music"
          }
        }
      },
      "select_sound_mode": {
        "description": "Send the media player the command to change sound mode.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to change sound mode on.",
            "example": "media_player.marantz"
          },
          "sound_mode": {
            "description": "Name of the sound mode to switch to.",
            "example": "Music"
          }
        }
      },
      "select_source": {
        "description": "Send the media player the command to change input source.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to change source on.",
            "example": "media_player.media_player.txnr535_0009b0d81f82"
          },
          "source": {
            "description": "Name of the source to switch to. Platform dependent.",
            "example": "video1"
          }
        }
      },
      "shuffle_set": {
        "description": "Set shuffling state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set.",
            "example": "media_player.spotify"
          },
          "shuffle": {
            "description": "True/false for enabling/disabling shuffle.",
            "example": true
          }
        }
      },
      "sonos_clear_sleep_timer": {
        "description": "Clear a Sonos timer.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will have the timer cleared.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "sonos_join": {
        "description": "Group player together.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will coordinate the grouping. Platform dependent.",
            "example": "media_player.living_room_sonos"
          },
          "master": {
            "description": "Entity ID of the player that should become the coordinator of the group.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "sonos_restore": {
        "description": "Restore a snapshot of the media player.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will be restored. Platform dependent.",
            "example": "media_player.living_room_sonos"
          },
          "with_group": {
            "description": "True (default) or False. Restore with all group attributes.",
            "example": "true"
          }
        }
      },
      "sonos_set_option": {
        "description": "Set Sonos sound options.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will have options set.",
            "example": "media_player.living_room_sonos"
          },
          "night_sound": {
            "description": "Enable Night Sound mode",
            "example": "true"
          },
          "speech_enhance": {
            "description": "Enable Speech Enhancement mode",
            "example": "true"
          }
        }
      },
      "sonos_set_sleep_timer": {
        "description": "Set a Sonos timer.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will have a timer set.",
            "example": "media_player.living_room_sonos"
          },
          "sleep_time": {
            "description": "Number of seconds to set the timer.",
            "example": "900"
          }
        }
      },
      "sonos_snapshot": {
        "description": "Take a snapshot of the media player.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will be snapshot. Platform dependent.",
            "example": "media_player.living_room_sonos"
          },
          "with_group": {
            "description": "True (default) or False. Snapshot with all group attributes.",
            "example": "true"
          }
        }
      },
      "sonos_unjoin": {
        "description": "Unjoin the player from a group.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities that will be unjoined from their group. Platform dependent.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "sonos_update_alarm": {
        "description": "",
        "fields": {}
      },
      "toggle": {
        "description": "Toggles a media player power state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "turn_off": {
        "description": "Turn a media player power off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "turn_on": {
        "description": "Turn a media player power on.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn on.",
            "example": "media_player.living_room_chromecast"
          }
        }
      },
      "volume_down": {
        "description": "Turn a media player volume down.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn volume down on.",
            "example": "media_player.living_room_sonos"
          }
        }
      },
      "volume_mute": {
        "description": "Mute a media player's volume.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to mute.",
            "example": "media_player.living_room_sonos"
          },
          "is_volume_muted": {
            "description": "True/false for mute/unmute.",
            "example": true
          }
        }
      },
      "volume_set": {
        "description": "Set a media player's volume level.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set volume level on.",
            "example": "media_player.living_room_sonos"
          },
          "volume_level": {
            "description": "Volume level to set as float.",
            "example": 0.6
          }
        }
      },
      "volume_up": {
        "description": "Turn a media player volume up.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn volume up on.",
            "example": "media_player.living_room_sonos"
          }
        }
      }
    }
  },
  {
    "domain": "tts",
    "services": {
      "clear_cache": {
        "description": "Remove cache files and RAM cache.",
        "fields": {}
      },
      "google_say": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "deconz",
    "services": {
      "configure": {
        "description": "Set attribute of device in deCONZ. See https://home-assistant.io/components/deconz/#device-services for details.",
        "fields": {
          "data": {
            "description": "Data is a json object with what data you want to alter.",
            "example": "{\"on\": true}"
          },
          "entity": {
            "description": "Entity id representing a specific device in deCONZ.",
            "example": "light.rgb_light"
          },
          "field": {
            "description": "Field is a string representing a full path to deCONZ endpoint (when entity is not specified) or a subpath of the device path for the entity (when entity is specified).",
            "example": "\"/lights/1/state\" or \"/state\""
          }
        }
      },
      "device_refresh": {
        "description": "Refresh device lists from deCONZ.",
        "fields": {}
      }
    }
  },
  {
    "domain": "scene",
    "services": {
      "turn_on": {
        "description": "Activate a scene.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of scenes to turn on",
            "example": "scene.romantic"
          }
        }
      }
    }
  },
  {
    "domain": "group",
    "services": {
      "reload": {
        "description": "Reload group configuration.",
        "fields": {}
      },
      "remove": {
        "description": "Remove a user group.",
        "fields": {
          "object_id": {
            "description": "Group id and part of entity id.",
            "example": "test_group"
          }
        }
      },
      "set": {
        "description": "Create/Update a user group.",
        "fields": {
          "add_entities": {
            "description": "List of members they will change on group listening.",
            "example": "domain.entity_id1, domain.entity_id2"
          },
          "all": {
            "description": "Enable this option if the group should only turn on when all entities are on.",
            "example": true
          },
          "control": {
            "description": "Value for control the group control.",
            "example": "hidden"
          },
          "entities": {
            "description": "List of all members in the group. Not compatible with 'delta'.",
            "example": "domain.entity_id1, domain.entity_id2"
          },
          "icon": {
            "description": "Name of icon for the group.",
            "example": "mdi:camera"
          },
          "name": {
            "description": "Name of group",
            "example": "My test group"
          },
          "object_id": {
            "description": "Group id and part of entity id.",
            "example": "test_group"
          },
          "view": {
            "description": "Boolean for if the group is a view.",
            "example": true
          },
          "visible": {
            "description": "If the group is visible on UI.",
            "example": true
          }
        }
      },
      "set_visibility": {
        "description": "Hide or show a group.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set value.",
            "example": "group.travel"
          },
          "visible": {
            "description": "True if group should be shown or False if it should be hidden.",
            "example": true
          }
        }
      }
    }
  },
  {
    "domain": "cover",
    "services": {
      "close_cover": {
        "description": "Close all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to close.",
            "example": "cover.living_room"
          }
        }
      },
      "close_cover_tilt": {
        "description": "Close all or specified cover tilt.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to close tilt.",
            "example": "cover.living_room"
          }
        }
      },
      "open_cover": {
        "description": "Open all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to open.",
            "example": "cover.living_room"
          }
        }
      },
      "open_cover_tilt": {
        "description": "Open all or specified cover tilt.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) tilt to open.",
            "example": "cover.living_room"
          }
        }
      },
      "set_cover_position": {
        "description": "Move to specific position all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to set cover position.",
            "example": "cover.living_room"
          },
          "position": {
            "description": "Position of the cover (0 to 100).",
            "example": 30
          }
        }
      },
      "set_cover_tilt_position": {
        "description": "Move to specific position all or specified cover tilt.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to set cover tilt position.",
            "example": "cover.living_room"
          },
          "tilt_position": {
            "description": "Tilt position of the cover (0 to 100).",
            "example": 30
          }
        }
      },
      "stop_cover": {
        "description": "Stop all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to stop.",
            "example": "cover.living_room"
          }
        }
      },
      "stop_cover_tilt": {
        "description": "Stop all or specified cover.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of cover(s) to stop.",
            "example": "cover.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "switch",
    "services": {
      "toggle": {
        "description": "Toggles a switch state.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "switch.living_room"
          }
        }
      },
      "turn_off": {
        "description": "Turn a switch off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "switch.living_room"
          }
        }
      },
      "turn_on": {
        "description": "Turn a switch on.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn on",
            "example": "switch.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "vacuum",
    "services": {
      "clean_spot": {
        "description": "Tell the vacuum cleaner to do a spot clean-up.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "locate": {
        "description": "Locate the vacuum cleaner robot.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "pause": {
        "description": "Pause the cleaning task.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "return_to_base": {
        "description": "Tell the vacuum cleaner to return to its dock.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "send_command": {
        "description": "Send a raw command to the vacuum cleaner.",
        "fields": {
          "command": {
            "description": "Command to execute.",
            "example": "set_dnd_timer"
          },
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          },
          "params": {
            "description": "Parameters for the command.",
            "example": "{ \"key\": \"value\" }"
          }
        }
      },
      "set_fan_speed": {
        "description": "Set the fan speed of the vacuum cleaner.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          },
          "fan_speed": {
            "description": "Platform dependent vacuum cleaner fan speed, with speed steps, like 'medium' or by percentage, between 0 and 100.",
            "example": "low"
          }
        }
      },
      "start": {
        "description": "Start or resume the cleaning task.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "start_pause": {
        "description": "Start, pause, or resume the cleaning task.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "stop": {
        "description": "Stop the current cleaning task.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "toggle": {
        "description": "",
        "fields": {}
      },
      "turn_off": {
        "description": "Stop the current cleaning task and return to home.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "turn_on": {
        "description": "Start a new cleaning task.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "xiaomi_remote_control_move": {
        "description": "Remote control the vacuum cleaner, make sure you first set it in remote control mode with `remote_control_start`.",
        "fields": {
          "duration": {
            "description": "Duration of the movement.",
            "example": "1500"
          },
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          },
          "rotation": {
            "description": "Rotation, between -179 degrees and 179 degrees.",
            "example": "90"
          },
          "velocity": {
            "description": "Speed, between -0.29 and 0.29.",
            "example": "0.2"
          }
        }
      },
      "xiaomi_remote_control_move_step": {
        "description": "Remote control the vacuum cleaner, only makes one move and then stops.",
        "fields": {
          "duration": {
            "description": "Duration of the movement.",
            "example": "1500"
          },
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          },
          "rotation": {
            "description": "Rotation, between -179 degrees and 179 degrees.",
            "example": "90"
          },
          "velocity": {
            "description": "Speed, between -0.29 and 0.29.",
            "example": "0.2"
          }
        }
      },
      "xiaomi_remote_control_start": {
        "description": "Start remote control of the vacuum cleaner. You can then move it with `remote_control_move`, when done call `remote_control_stop`.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      },
      "xiaomi_remote_control_stop": {
        "description": "Stop remote control mode of the vacuum cleaner.",
        "fields": {
          "entity_id": {
            "description": "Name of the vacuum entity.",
            "example": "vacuum.xiaomi_vacuum_cleaner"
          }
        }
      }
    }
  },
  {
    "domain": "light",
    "services": {
      "toggle": {
        "description": "Toggles a light.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "light.kitchen"
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state.",
            "example": 60
          }
        }
      },
      "turn_off": {
        "description": "Turn a light off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "light.kitchen"
          },
          "flash": {
            "description": "If the light should flash.",
            "values": [
              "short",
              "long"
            ]
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state.",
            "example": 60
          }
        }
      },
      "turn_on": {
        "description": "Turn a light on.",
        "fields": {
          "brightness": {
            "description": "Number between 0..255 indicating brightness.",
            "example": 120
          },
          "brightness_pct": {
            "description": "Number between 0..100 indicating percentage of full brightness.",
            "example": 47
          },
          "color_name": {
            "description": "A human readable color name.",
            "example": "red"
          },
          "color_temp": {
            "description": "Color temperature for the light in mireds.",
            "example": 250
          },
          "effect": {
            "description": "Light effect.",
            "values": [
              "colorloop",
              "random"
            ]
          },
          "entity_id": {
            "description": "Name(s) of entities to turn on",
            "example": "light.kitchen"
          },
          "flash": {
            "description": "If the light should flash.",
            "values": [
              "short",
              "long"
            ]
          },
          "hs_color": {
            "description": "Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100.",
            "example": "[300, 70]"
          },
          "kelvin": {
            "description": "Color temperature for the light in Kelvin.",
            "example": 4000
          },
          "profile": {
            "description": "Name of a light profile to use.",
            "example": "relax"
          },
          "rgb_color": {
            "description": "Color for the light in RGB-format.",
            "example": "[255, 100, 100]"
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state",
            "example": 60
          },
          "white_value": {
            "description": "Number between 0..255 indicating level of white.",
            "example": "250"
          },
          "xy_color": {
            "description": "Color for the light in XY-format.",
            "example": "[0.52, 0.43]"
          }
        }
      }
    }
  },
  {
    "domain": "camera",
    "services": {
      "disable_motion_detection": {
        "description": "Disable the motion detection in a camera.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to disable motion detection.",
            "example": "camera.living_room_camera"
          }
        }
      },
      "enable_motion_detection": {
        "description": "Enable the motion detection in a camera.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to enable motion detection.",
            "example": "camera.living_room_camera"
          }
        }
      },
      "snapshot": {
        "description": "Take a snapshot from a camera.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to create snapshots from.",
            "example": "camera.living_room_camera"
          },
          "filename": {
            "description": "Template of a Filename. Variable is entity_id.",
            "example": "/tmp/snapshot_{{ entity_id }}"
          }
        }
      },
      "turn_off": {
        "description": "Turn off camera.",
        "fields": {
          "entity_id": {
            "description": "Entity id.",
            "example": "camera.living_room"
          }
        }
      },
      "turn_on": {
        "description": "Turn on camera.",
        "fields": {
          "entity_id": {
            "description": "Entity id.",
            "example": "camera.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "automation",
    "services": {
      "reload": {
        "description": "Reload the automation configuration.",
        "fields": {}
      },
      "toggle": {
        "description": "Toggle an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to toggle on/off.",
            "example": "automation.notify_home"
          }
        }
      },
      "trigger": {
        "description": "Trigger the action of an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to trigger.",
            "example": "automation.notify_home"
          }
        }
      },
      "turn_off": {
        "description": "Disable an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to turn off.",
            "example": "automation.notify_home"
          }
        }
      },
      "turn_on": {
        "description": "Enable an automation.",
        "fields": {
          "entity_id": {
            "description": "Name of the automation to turn on.",
            "example": "automation.notify_home"
          }
        }
      }
    }
  },
  {
    "domain": "device_tracker",
    "services": {
      "bluetooth_tracker_update": {
        "description": "",
        "fields": {}
      },
      "see": {
        "description": "Control tracked device.",
        "fields": {
          "battery": {
            "description": "Battery level of device.",
            "example": "100"
          },
          "dev_id": {
            "description": "Id of device (find id in known_devices.yaml).",
            "example": "phonedave"
          },
          "gps": {
            "description": "GPS coordinates where device is located (latitude, longitude).",
            "example": "[51.509802, -0.086692]"
          },
          "gps_accuracy": {
            "description": "Accuracy of GPS coordinates.",
            "example": "80"
          },
          "host_name": {
            "description": "Hostname of device",
            "example": "Dave"
          },
          "location_name": {
            "description": "Name of location where device is located (not_home is away).",
            "example": "home"
          },
          "mac": {
            "description": "MAC address of device",
            "example": "FF:FF:FF:FF:FF:FF"
          }
        }
      }
    }
  },
  {
    "domain": "notify",
    "services": {
      "notify": {
        "description": "Send a notification.",
        "fields": {
          "data": {
            "description": "Extended information for notification. Optional depending on the platform.",
            "example": "platform specific"
          },
          "message": {
            "description": "Message body of the notification.",
            "example": "The garage door has been open for 10 minutes."
          },
          "target": {
            "description": "An array of targets to send the notification to. Optional depending on the platform.",
            "example": "platform specific"
          },
          "title": {
            "description": "Optional title for your notification.",
            "example": "Your Garage Door Friend"
          }
        }
      }
    }
  },
  {
    "domain": "hassio",
    "services": {
      "addon_restart": {
        "description": "",
        "fields": {}
      },
      "addon_start": {
        "description": "",
        "fields": {}
      },
      "addon_stdin": {
        "description": "",
        "fields": {}
      },
      "addon_stop": {
        "description": "",
        "fields": {}
      },
      "host_reboot": {
        "description": "",
        "fields": {}
      },
      "host_shutdown": {
        "description": "",
        "fields": {}
      },
      "restore_full": {
        "description": "",
        "fields": {}
      },
      "restore_partial": {
        "description": "",
        "fields": {}
      },
      "snapshot_full": {
        "description": "",
        "fields": {}
      },
      "snapshot_partial": {
        "description": "",
        "fields": {}
      }
    }
  },
  {
    "domain": "remote",
    "services": {
      "harmony_sync": {
        "description": "Syncs the remote's configuration.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to sync.",
            "example": "remote.family_room"
          }
        }
      },
      "send_command": {
        "description": "Sends a single command to a single device.",
        "fields": {
          "command": {
            "description": "A single command or a list of commands to send.",
            "example": "Play"
          },
          "delay_secs": {
            "description": "An optional value that specifies that number of seconds you want to wait in between repeated commands. If not specified, the default of 0.4 seconds will be used.",
            "example": "0.75"
          },
          "device": {
            "description": "Device ID to send command to.",
            "example": "32756745"
          },
          "entity_id": {
            "description": "Name(s) of entities to send command from.",
            "example": "remote.family_room"
          },
          "num_repeats": {
            "description": "An optional value that specifies the number of times you want to repeat the command(s). If not specified, the command(s) will not be repeated.",
            "example": "5"
          }
        }
      },
      "toggle": {
        "description": "Toggles a device.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "remote.family_room"
          }
        }
      },
      "turn_off": {
        "description": "Sends the Power Off Command.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "remote.family_room"
          }
        }
      },
      "turn_on": {
        "description": "Sends the Power On Command.",
        "fields": {
          "activity": {
            "description": "Activity ID or Activity Name to start.",
            "example": "BedroomTV"
          },
          "entity_id": {
            "description": "Name(s) of entities to turn on.",
            "example": "remote.family_room"
          }
        }
      }
    }
  }
]
