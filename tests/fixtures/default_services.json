[
  {
    "domain": "homeassistant",
    "services": {
      "check_config": {
        "description": "Check the Home Assistant configuration files for errors. Errors will be displayed in the Home Assistant log.",
        "fields": {}
      },
      "reload_core_config": {
        "description": "Reload the core configuration.",
        "fields": {}
      },
      "restart": {
        "description": "Restart the Home Assistant service.",
        "fields": {}
      },
      "stop": {
        "description": "Stop the Home Assistant service.",
        "fields": {}
      },
      "toggle": {
        "description": "Generic service to toggle devices on/off under any domain. Same usage as the light.turn_on, switch.turn_on, etc. services.",
        "fields": {
          "entity_id": {
            "description": "The entity_id of the device to toggle on/off.",
            "example": "light.living_room"
          }
        }
      }
    }
  },
  {
    "domain": "group",
    "services": {
      "reload": {
        "description": "Reload group configuration.",
        "fields": {}
      },
      "remove": {
        "description": "Remove a user group.",
        "fields": {
          "object_id": {
            "description": "Group id and part of entity id.",
            "example": "test_group"
          }
        }
      },
      "set": {
        "description": "Create/Update a user group.",
        "fields": {
          "add_entities": {
            "description": "List of members they will change on group listening.",
            "example": "domain.entity_id1, domain.entity_id2"
          },
          "all": {
            "description": "Enable this option if the group should only turn on when all entities are on.",
            "example": true
          },
          "control": {
            "description": "Value for control the group control.",
            "example": "hidden"
          },
          "entities": {
            "description": "List of all members in the group. Not compatible with 'delta'.",
            "example": "domain.entity_id1, domain.entity_id2"
          },
          "icon": {
            "description": "Name of icon for the group.",
            "example": "mdi:camera"
          },
          "name": {
            "description": "Name of group",
            "example": "My test group"
          },
          "object_id": {
            "description": "Group id and part of entity id.",
            "example": "test_group"
          },
          "view": {
            "description": "Boolean for if the group is a view.",
            "example": true
          },
          "visible": {
            "description": "If the group is visible on UI.",
            "example": true
          }
        }
      },
      "set_visibility": {
        "description": "Hide or show a group.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to set value.",
            "example": "group.travel"
          },
          "visible": {
            "description": "True if group should be shown or False if it should be hidden.",
            "example": true
          }
        }
      }
    }
  },
  {
    "domain": "light",
    "services": {
      "toggle": {
        "description": "Toggles a light.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to toggle.",
            "example": "light.kitchen"
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state.",
            "example": 60
          }
        }
      },
      "turn_off": {
        "description": "Turn a light off.",
        "fields": {
          "entity_id": {
            "description": "Name(s) of entities to turn off.",
            "example": "light.kitchen"
          },
          "flash": {
            "description": "If the light should flash.",
            "values": [
              "short",
              "long"
            ]
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state.",
            "example": 60
          }
        }
      },
      "turn_on": {
        "description": "Turn a light on.",
        "fields": {
          "brightness": {
            "description": "Number between 0..255 indicating brightness.",
            "example": 120
          },
          "brightness_pct": {
            "description": "Number between 0..100 indicating percentage of full brightness.",
            "example": 47
          },
          "color_name": {
            "description": "A human readable color name.",
            "example": "red"
          },
          "color_temp": {
            "description": "Color temperature for the light in mireds.",
            "example": 250
          },
          "effect": {
            "description": "Light effect.",
            "values": [
              "colorloop",
              "random"
            ]
          },
          "entity_id": {
            "description": "Name(s) of entities to turn on",
            "example": "light.kitchen"
          },
          "flash": {
            "description": "If the light should flash.",
            "values": [
              "short",
              "long"
            ]
          },
          "hs_color": {
            "description": "Color for the light in hue/sat format. Hue is 0-360 and Sat is 0-100.",
            "example": "[300, 70]"
          },
          "kelvin": {
            "description": "Color temperature for the light in Kelvin.",
            "example": 4000
          },
          "profile": {
            "description": "Name of a light profile to use.",
            "example": "relax"
          },
          "rgb_color": {
            "description": "Color for the light in RGB-format.",
            "example": "[255, 100, 100]"
          },
          "transition": {
            "description": "Duration in seconds it takes to get to next state",
            "example": 60
          },
          "white_value": {
            "description": "Number between 0..255 indicating level of white.",
            "example": "250"
          },
          "xy_color": {
            "description": "Color for the light in XY-format.",
            "example": "[0.52, 0.43]"
          }
        }
      }
    }
  }  
]
